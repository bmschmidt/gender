% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gender_vector.R
\name{gender_vector}
\alias{gender_vector}
\title{Use gender prediction on each element of vector, with automatic defaults}
\usage{
gender_vector(names, years = 2000, year_ends = years,
  countries = "United States", threshold = 0.5)
}
\arguments{
\item{names}{First names as a character vector. Names are case insensitive.}

\item{years}{The birth year of the name whose gender is to be predicted.
Default is 2000.}

\item{year_ends}{Optionally, a second set of years to make a range prediction.
This is useful if you are uncertain about a birth year, or if a name is rare and you
want to search a range of years. Defaults to the equivalent value of years.}

\item{countries}{The countries for which datasets are being used. Default is
"United States"
will call the "ipums" method between 1789 and 1930, and "ssa" between 1931 and 2011.
"Canada", "United Kingdom", "Germany", "Iceland", "Norway", and "Sweden"
will call the 'napp' method between 1758 and 1910.}

\item{threshold}{Certainty required before a name is reported as 'male' or 'female.'
If .8, for example, 80% of occurrences of a name must be female before the name
returns female; otherwise the value will be NA.}
}
\value{
A vector of the same length as the longest passed argument. Each
value will be 'male', 'female', or NA.
}
\description{
This function calls `gender_df` under the hood, so it is efficient at
eliminating duplicate calls.
}
\examples{

# Two men and a woman:

gender_vector(c("Peter","Paul","Mary"))

# One of these names is not like the others.

gender_vector(c("John","Paul","George","Ringo"))

# This one is slow--I'm not sure why, but clearly
# something isn't optimized for the same name on many
# years.
gender_vector("Leslie",years = 1850:1980)

gender_vector(c("Jean"),years = 1900, countries =
c("United States", "Sweden"))

}

